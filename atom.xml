<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cazaea&#39;s Blog</title>
  
  <subtitle>一直相信：越努力，越幸运；越沟通，越亲近。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cazaea.com/"/>
  <updated>2018-11-12T03:30:31.318Z</updated>
  <id>https://cazaea.com/</id>
  
  <author>
    <name>Cazaea</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>岘港5天4夜游</title>
    <link href="https://cazaea.com/2018/10/26/%E5%B2%98%E6%B8%AF5%E5%A4%A94%E5%A4%9C%E6%B8%B8/"/>
    <id>https://cazaea.com/2018/10/26/岘港5天4夜游/</id>
    <published>2018-10-26T06:44:37.480Z</published>
    <updated>2018-11-12T03:30:31.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2018-10-21刚从岘港回来。"><a href="#2018-10-21刚从岘港回来。" class="headerlink" title="2018.10.21刚从岘港回来。"></a>2018.10.21刚从岘港回来。</h1><h2 id="首先说一下，每人2750人民币，跟团去的，还算便宜，能想到“购物消费游”。"><a href="#首先说一下，每人2750人民币，跟团去的，还算便宜，能想到“购物消费游”。" class="headerlink" title="首先说一下，每人2750人民币，跟团去的，还算便宜，能想到“购物消费游”。"></a><em>首先说一下，每人2750人民币，跟团去的，还算便宜，能想到“购物消费游”。</em></h2><h2 id="1、准备"><a href="#1、准备" class="headerlink" title="1、准备"></a>1、准备</h2><p>准备好<strong>护照</strong>，<strong>大两寸照片（4cm*6cm）</strong>，团费直接包含：往返机票（南京-岘港）+4晚酒店+落地签证+所有集体用车。</p><p><strong>首先</strong>，经济航班，包机，真的韩难受，因为是越南航空，所以每个人都感觉很挤很难受，如果你跟我一样，一定记得带个<strong>U型枕</strong>。</p><p>还有就是，如果打算回来带点特产，一定<strong>拿个箱子托运</strong>，别嫌麻烦，否则回来你更麻烦（可能想买的多，东西放不下）<br>因为走的急，也不想大老远跑<strong>去银行兑换越南盾</strong>（当时汇率1：3360左右），登机那天，在机场跟领队以1：3100兑换了500人民币；后来游玩当地领队汇率1：3000，有点坑；当然酒店也能兑换1：3200；最感动我的还是朋友，1：3333。</p><p>路途中，导游一直说酒店<strong>给小费</strong>的事儿。</p><p><strong>首先</strong>，酒店每晚给1万盾放枕头下或床头柜，否则保洁可能拿着毛巾擦马桶。虽然没有见过，但如此刚直不阿的我也被洗脑了，乖乖的每天按时放上1万盾，想想也就3元，就没计较太多。</p><p><strong>其次</strong>，办理签证走窗口的时候，要夹10软妹币在护照里，导游说可以快点通过，毕竟越南人效率太TM低了。<br>此处有故事~</p><p><strong>还有就是</strong>，5天的行程，结束后，每人要给越南当地司机50人民币，最后是本地导游在车里直接收，插尼马德。<br>还好，只跟着团晚四天，一天自由行，只给了40，这是后话，一会儿说。 </p><a id="more"></a><h2 id="2、开始"><a href="#2、开始" class="headerlink" title="2、开始"></a>2、开始</h2><h3 id="开始就不爽。"><a href="#开始就不爽。" class="headerlink" title="开始就不爽。"></a>开始就不爽。</h3><p>越南经济（廉价）航空，真TM憋屈，怎么坐/躺都不舒服。当然，这是我自己选择的低端团费，怪不得别人，手动滑稽~<br>下飞机，湿热的空气扑面而来，甚至还夹杂着海水味道，“海的味道，我知道~”，额~ ，跑偏了~</p><p><img src="https://i.imgur.com/WOdNMKv.jpg" alt="踩到国外地面"></p><p>办签证出境时，前面说的给小费，这种情况，还真遇上了。<br>旁边一排也是国内的，都是大爷大妈。因为没有准备“小费”，窗口停了！公务人员开始了侃大山模式，你说气不气？！<br>随后，坐上车前往酒店，旅游团还算良心，订了Nalod（拿罗德）酒店（据称五星），就在美溪沙滩旁边，当然跟国内星是没法比的，随后从Booking上看到，标准双人间，4晚大概也要2600人民币左右，环境还是不错的。</p><p>配的还算齐全：<strong>人字拖（非一次性）、编制的手提购物包、密码保险箱、浴袍、吹风机、小冰箱</strong>。</p><p>当然洗手间配备也很全，<strong>沐浴露，洗发水，手工香皂，一次性：浴帽，针线包，剃须刀，牙刷/牙膏、棉棒</strong>、满足了平时所需。</p><p>讲到这里，我就想哭，玛德。</p><p>旅游社让我买转换头，自带拖鞋，洗漱用品，根本不用，卧槽~<br>害得我拿来拿去，不过，转换头就留着下次去欧洲玩吧。</p><p><img src="https://i.imgur.com/D9eawHw.jpg" alt="标准间"></p><p><img src="https://i.imgur.com/0JMZScl.jpg" alt="消费区，上边每天两包G7咖啡，两包Green Tea, 4包白砂糖免费，其他收费，大概都在3万盾左右"></p><h2 id="2-1、第一晚"><a href="#2-1、第一晚" class="headerlink" title="2-1、第一晚"></a>2-1、第一晚</h2><h3 id="刚到酒店，服务员递了杯冰的蜂蜜姜水，沁人心脾，温润爽口，瞬间感觉身体飘飘然"><a href="#刚到酒店，服务员递了杯冰的蜂蜜姜水，沁人心脾，温润爽口，瞬间感觉身体飘飘然" class="headerlink" title="刚到酒店，服务员递了杯冰的蜂蜜姜水，沁人心脾，温润爽口，瞬间感觉身体飘飘然~"></a>刚到酒店，服务员递了杯冰的蜂蜜姜水，沁人心脾，温润爽口，瞬间感觉身体飘飘然~</h3><p>火气也降了一半~</p><p>安顿好酒店，就去旁边吃了海鲜：一条鱼，一公斤大虾，一公斤扇贝，两份炒饭，6个人吃的很满足，花费650人民币。<br>这也是我第一次吃虾不去皮，去掉虾头，整颗放嘴里，焦香酥脆~<br>还算不贵，但也不算便宜。</p><p><img src="https://i.imgur.com/5FIa7lT.jpg" alt="不记名扇贝"></p><p><img src="https://i.imgur.com/wf1PysP.jpg" alt="吃相难看就马赛克了"></p><p>吃完，去旁边的Code Mart，买了燕窝水、TH true越南酸奶，酒店旁边大概都是1万5越南盾左右，Big C Mart只需要5000越南盾左右，太TM好喝了！有蓝莓/香草/榴莲/芦荟/原味，对于喜欢喝国内酸奶的我，喝完这个，果断把国内的酸奶戒了~</p><h2 id="2-2、第二天"><a href="#2-2、第二天" class="headerlink" title="2-2、第二天"></a>2-2、第二天</h2><h3 id="被安排。"><a href="#被安排。" class="headerlink" title="被安排。"></a>被安排。</h3><p>（<strong>上午）灵姑湾–&gt;海云岭–&gt;（下午）占婆博物馆–&gt;东海观音（灵应寺）–&gt;（晚上）魅力岘港</strong></p><p>导游把项目压缩在一天搞定，打算第二天去巴拿山，说每个人自费550人民币，都没人去，就变成了自由行，当然，会先拿个<strong>《安全免责声明》</strong>让你签名。</p><p><img src="https://i.imgur.com/oYlB2XO.jpg" alt="灵姑湾"></p><p><img src="https://i.imgur.com/kM9Ez54.jpg" alt="占婆博物馆"></p><p><img src="https://i.imgur.com/SgYusjK.jpg" alt="灵应寺内建筑"></p><p><img src="https://i.imgur.com/zQzsJzU.jpg" alt="东海观音"></p><p><img src="https://i.imgur.com/sWE9Psk.jpg" alt="魅力岘港所有表演人员"></p><p><img src="https://i.imgur.com/mXbC3Qf.jpg" alt="中午团餐街边随手拍"></p><h2 id="2-3、第三天"><a href="#2-3、第三天" class="headerlink" title="2-3、第三天"></a>2-3、第三天</h2><h3 id="自由行。"><a href="#自由行。" class="headerlink" title="自由行。"></a>自由行。</h3><p>本想起个晚，后来想想，还得吃早餐，马德，又是7点起（国内时间8点）。</p><p>磨磨蹭蹭，11点准备出发，找个正规的洗头店，类似哔哩哔哩上的皇家什么玩意儿，没找到。</p><p>无奈，只好转战Big C Mart，买点东西，回酒店游泳。</p><p>毕竟晚上约定海边Party。</p><p><img src="https://i.imgur.com/0WBl90M.jpg" alt="瀚江桥上随手拍"></p><p><img src="https://i.imgur.com/GMVw5W3.jpg" alt="酒店4楼泳池，不错"></p><p>自由行，果然心情好了很多~</p><p>晚上又是一顿大餐，爽到爆炸！！！</p><p>花了1765万越南盾，点的多，没吃完~~~</p><p><img src="https://i.imgur.com/KeVjpzQ.jpg" alt=""></p><p><img src="https://i.imgur.com/zAPfdcD.jpg" alt=""></p><p><img src="https://i.imgur.com/Yes6i2L.jpg" alt=""></p><p><img src="https://i.imgur.com/xBySgeT.jpg" alt=""></p><p><img src="https://i.imgur.com/aB3kNGf.jpg" alt=""></p><p><img src="https://i.imgur.com/zMZz5ge.jpg" alt=""></p><p><img src="https://i.imgur.com/o6FQ9cB.jpg" alt=""></p><h2 id="2-4、第四天"><a href="#2-4、第四天" class="headerlink" title="2-4、第四天"></a>2-4、第四天</h2><h3 id="跟团，继续购物，无奈。"><a href="#跟团，继续购物，无奈。" class="headerlink" title="跟团，继续购物，无奈。"></a>跟团，继续购物，无奈。</h3><p><strong>上午–&gt;</strong>沉香/砗磲/蜜蜡，三宝采购，实在太贵，买不起。</p><p>跟国内价位相等，我都觉得贵，何况还比国内贵。</p><p>一串好看点的<strong>砗磲要6亿盾</strong>，<strong>沉香手串要6千万盾</strong>，买不起！实在是买不起！！！</p><p><strong>然后–&gt;</strong>越南乳胶制品基地参观，还是购物~</p><p>一个<strong>U型枕要330人民币</strong>，<strong>床垫要1万大几</strong>，还是买不起~</p><p>对不起，我拉了出国旅游同胞的后腿~</p><p>接下类又去了<strong>粉红大教堂</strong></p><p><img src="https://i.imgur.com/ZwVkq8f.jpg" alt=""></p><p><strong>下午–&gt;</strong>先是去了仙沙湾，自费160万盾潜水+喂鱼+拖伞+皮划艇，接着一路狂奔会安古镇，宣传购买蚕丝被。</p><p>到了晚上，这才是兴致开始的时候~</p><p>鉴于前一天没找到洗头的地方，这天更改目标，直接找Massage或者Spa牌子，最终找到一家正规的Spa，按摩一个半小时25万盾，外加10万盾小费。</p><p>贼溜溜爽~</p><p>谈起小费，又想吐槽，本来想着给5万，我朋友其实就两万零钱（想给两万）。</p><p>结果，一个小骚货直接拿出了10万给一妹子，这就完犊子了，其它妹子都要10万，编程明抢来了。</p><p>还有一件搞笑的事，就是在找“马杀鸡”的时候，路过Gold 3，楼下保安正在忙活，我们就问 “How much? Message.”<br>他回：“Where are you from?”，“China”，这大叔一听，立马 “按摩~ 打洞~ 120万~”，我擦，还有这操作，直接走人，吓得我小鹿乱撞~</p><h2 id="2-5、第五天"><a href="#2-5、第五天" class="headerlink" title="2-5、第五天"></a>2-5、第五天</h2><h3 id="回国，回家。"><a href="#回国，回家。" class="headerlink" title="回国，回家。"></a>回国，回家。</h3><p>回来的时候，遭遇了事情，被国内一群大爷大妈插队，港真，很烦！！！</p><p>想指着鼻子骂人！！！</p><p>越南机场工作人员的效率也真TM慢！！！</p><p>就因为这个，我们一行10几个人被排在了最后，结果，所有人都必须等着我们，毕竟飞机包机。</p><p><strong><em>你能想像，一只手提着裤子，一只手拎着包，踩着还没有完全穿好的鞋子，飞奔着跑向登机口的样子么？！<br>那就是最后的我们几个。。。</em></strong></p><h2 id="3、特色"><a href="#3、特色" class="headerlink" title="3、特色"></a>3、特色</h2><ol><li><strong>法棍</strong>尝一尝，还蛮好吃，一个也就1万5越南盾；</li><li><strong>TH true酸奶</strong>，<strong>燕窝水</strong>这个必须喝，贼好喝，<strong>Tiger啤酒</strong>也不错，没有苦味儿；</li><li><strong>当地的咖啡</strong>1万5或者2万盾，也就5、6块人民币，还不错；</li><li><strong>Message</strong>，找正规的地方，感受一下，很爽；</li><li><strong>放松下来，在沙滩旁边，吹着海风，吃顿海鲜</strong>，很是惬意；</li></ol><p><img src="https://i.imgur.com/3zFQCMR.jpg" alt="法棍，外焦里嫩，陪着本地香料，肉片"></p><p><img src="https://i.imgur.com/Akg4rMr.jpg" alt="这是在海云岭景点，两万盾"></p><h2 id="4、注意"><a href="#4、注意" class="headerlink" title="4、注意"></a>4、注意</h2><ol><li>盾即越南盾，越南盾除1000再乘3就是花的人民币；</li><li>没必要拿插座转换头，充电宝，洗漱用品和拖鞋，累赘；</li><li>在越南，韩国人是“爸爸”，我们会被差别对待，同时他们还有优惠，越南当地，韩国的店很多，韩国人也很多；</li><li>买东西，基本沟通无压力，实在不行，下个语音翻译软件;</li><li>据导游说，他们不讲价，纯粹胡扯！千万别信！每个卖东西的商家都标配计算器，比如你看中了一个东西，他会拿出计算器输个1200000，你要是说，NoNoNo，然后拿过计算器，清除然后输入1000000，并配上一句“Ok?”也许就愉快的成交了;</li><li>不管别人推荐的多好，自己觉得不值的，就不买，不去，管他呢；</li><li>仙沙湾：别花钱，千万别潜水！！！别花钱，千万别潜水！！！别花钱，千万别潜水！！！重要的事情说三遍，水质太差，还不如在美溪沙滩看看海~</li></ol><h2 id="关于境外网络特别说明："><a href="#关于境外网络特别说明：" class="headerlink" title="关于境外网络特别说明："></a>关于境外网络特别说明：</h2><h3 id="有人说越南WIFI覆盖，纯属扯淡，要么连不上，要么连上也是垃圾网速；我开的华为天际通越南5日流量包58元，一天只有200M高速网络，不够用，很后悔；后来才知道某宝有越南手机卡20元，限时5天，5天后过期，这个才是王道"><a href="#有人说越南WIFI覆盖，纯属扯淡，要么连不上，要么连上也是垃圾网速；我开的华为天际通越南5日流量包58元，一天只有200M高速网络，不够用，很后悔；后来才知道某宝有越南手机卡20元，限时5天，5天后过期，这个才是王道" class="headerlink" title="有人说越南WIFI覆盖，纯属扯淡，要么连不上，要么连上也是垃圾网速；我开的华为天际通越南5日流量包58元，一天只有200M高速网络，不够用，很后悔；后来才知道某宝有越南手机卡20元，限时5天，5天后过期，这个才是王道"></a>有人说越南WIFI覆盖，纯属扯淡，要么连不上，要么连上也是垃圾网速；我开的华为天际通越南5日流量包58元，一天只有200M高速网络，不够用，很后悔；后来才知道某宝有越南手机卡20元，限时5天，5天后过期，这个才是王道</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2018-10-21刚从岘港回来。&quot;&gt;&lt;a href=&quot;#2018-10-21刚从岘港回来。&quot; class=&quot;headerlink&quot; title=&quot;2018.10.21刚从岘港回来。&quot;&gt;&lt;/a&gt;2018.10.21刚从岘港回来。&lt;/h1&gt;&lt;h2 id=&quot;首先说一下，每人2750人民币，跟团去的，还算便宜，能想到“购物消费游”。&quot;&gt;&lt;a href=&quot;#首先说一下，每人2750人民币，跟团去的，还算便宜，能想到“购物消费游”。&quot; class=&quot;headerlink&quot; title=&quot;首先说一下，每人2750人民币，跟团去的，还算便宜，能想到“购物消费游”。&quot;&gt;&lt;/a&gt;&lt;em&gt;首先说一下，每人2750人民币，跟团去的，还算便宜，能想到“购物消费游”。&lt;/em&gt;&lt;/h2&gt;&lt;h2 id=&quot;1、准备&quot;&gt;&lt;a href=&quot;#1、准备&quot; class=&quot;headerlink&quot; title=&quot;1、准备&quot;&gt;&lt;/a&gt;1、准备&lt;/h2&gt;&lt;p&gt;准备好&lt;strong&gt;护照&lt;/strong&gt;，&lt;strong&gt;大两寸照片（4cm*6cm）&lt;/strong&gt;，团费直接包含：往返机票（南京-岘港）+4晚酒店+落地签证+所有集体用车。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先&lt;/strong&gt;，经济航班，包机，真的韩难受，因为是越南航空，所以每个人都感觉很挤很难受，如果你跟我一样，一定记得带个&lt;strong&gt;U型枕&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;还有就是，如果打算回来带点特产，一定&lt;strong&gt;拿个箱子托运&lt;/strong&gt;，别嫌麻烦，否则回来你更麻烦（可能想买的多，东西放不下）&lt;br&gt;因为走的急，也不想大老远跑&lt;strong&gt;去银行兑换越南盾&lt;/strong&gt;（当时汇率1：3360左右），登机那天，在机场跟领队以1：3100兑换了500人民币；后来游玩当地领队汇率1：3000，有点坑；当然酒店也能兑换1：3200；最感动我的还是朋友，1：3333。&lt;/p&gt;
&lt;p&gt;路途中，导游一直说酒店&lt;strong&gt;给小费&lt;/strong&gt;的事儿。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先&lt;/strong&gt;，酒店每晚给1万盾放枕头下或床头柜，否则保洁可能拿着毛巾擦马桶。虽然没有见过，但如此刚直不阿的我也被洗脑了，乖乖的每天按时放上1万盾，想想也就3元，就没计较太多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其次&lt;/strong&gt;，办理签证走窗口的时候，要夹10软妹币在护照里，导游说可以快点通过，毕竟越南人效率太TM低了。&lt;br&gt;此处有故事~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;还有就是&lt;/strong&gt;，5天的行程，结束后，每人要给越南当地司机50人民币，最后是本地导游在车里直接收，插尼马德。&lt;br&gt;还好，只跟着团晚四天，一天自由行，只给了40，这是后话，一会儿说。 &lt;/p&gt;
    
    </summary>
    
      <category term="旅游" scheme="https://cazaea.com/categories/%E6%97%85%E6%B8%B8/"/>
    
    
      <category term="DANANG" scheme="https://cazaea.com/tags/DANANG/"/>
    
      <category term="公司团建" scheme="https://cazaea.com/tags/%E5%85%AC%E5%8F%B8%E5%9B%A2%E5%BB%BA/"/>
    
      <category term="境外旅游" scheme="https://cazaea.com/tags/%E5%A2%83%E5%A4%96%E6%97%85%E6%B8%B8/"/>
    
      <category term="越南" scheme="https://cazaea.com/tags/%E8%B6%8A%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>BottomNavigationView最新用法</title>
    <link href="https://cazaea.com/2018/09/27/BottomNavigationView%E6%9C%80%E6%96%B0%E4%BD%BF%E7%94%A8/"/>
    <id>https://cazaea.com/2018/09/27/BottomNavigationView最新使用/</id>
    <published>2018-09-27T07:41:04.054Z</published>
    <updated>2018-11-12T03:31:33.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BottomNavigationView最新用法"><a href="#BottomNavigationView最新用法" class="headerlink" title="BottomNavigationView最新用法"></a>BottomNavigationView最新用法</h1><ul><li>Android中使用BottomNavigationView早已不稀奇，之前其他博客也都介绍的有用法。</li><li><p>但是，现在网上所出现的使用方法已不符合当今需要</p><ul><li><strong><em>方法一 (com.android.support:design 版本不高于 27.0.3)</em></strong> 网上一堆</li><li><strong><em>方法二 (com.android.support:design 版本高于 27.0.3)</em></strong> 网上没有任何说明</li></ul></li><li><p>故，在此特别介绍一下<strong><em>方法二</em></strong> 以供参考</p></li></ul><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><ul><li><p>此方法仅针对 <strong>Gradle</strong> 文件引用 <strong>com.android.support:design</strong> 版本不高于 <strong>27.0.3</strong></p><ul><li>⓵ 对于 <strong><em>Item&gt;3</em></strong> 时的平移及缩放动画的处理</li><li>⓶ 对于 <strong><em>Item</em></strong> 缩放动画（选中放大图标/文字）</li></ul></li></ul><a id="more"></a><ul><li><p>对于 <strong><em>Item&gt;3</em></strong> 时的平移及缩放动画的处理</p><pre><code>@SuppressLint(&quot;RestrictedApi&quot;)public static void disableShiftMode(BottomNavigationView navigationView) {    try {        BottomNavigationMenuView menuView = (BottomNavigationMenuView) navigationView.getChildAt(0);        Field mShiftingMode  = menuView.getClass().getDeclaredField(&quot;mShiftingMode&quot;);        mShiftingMode.setAccessible(true);        mShiftingMode.setBoolean(menuView, false);        mShiftingMode.setAccessible(false);        for (int i = 0; i &lt; menuView.getChildCount(); i++) {            BottomNavigationItemView itemView = (BottomNavigationItemView) menuView.getChildAt(i);            itemView.setShifting(false);            itemView.setEnabled(true);            itemView.setChecked(itemView.getItemData().isChecked());        }    } catch (NoSuchFieldException e) {        Log.e(&quot;BNVHelper&quot;, &quot;Unable to get shift mode field&quot;, e);    } catch (IllegalAccessException e) {        Log.e(&quot;BNVHelper&quot;, &quot;Unable to change value of shift mode&quot;, e);    }}</code></pre></li><li><p>对于 <strong><em>Item</em></strong> 缩放动画（选中放大图标/文字）</p><pre><code>@SuppressLint(&quot;RestrictedApi&quot;)public static void disableItemScale(BottomNavigationView view) {    try {        BottomNavigationMenuView menuView = (BottomNavigationMenuView) view.getChildAt(0);        Field mLargeLabelField = menuView.getClass().getDeclaredField(&quot;mLargeLabel&quot;);        Field mSmallLabelField = menuView.getClass().getDeclaredField(&quot;mSmallLabel&quot;);        Field mShiftAmountField = menuView.getClass().getDeclaredField(&quot;mShiftAmount&quot;);        Field mScaleUpFactorField = menuView.getClass().getDeclaredField(&quot;mScaleUpFactor&quot;);        Field mScaleDownFactorField = menuView.getClass().getDeclaredField(&quot;mScaleDownFactor&quot;);        mSmallLabelField.setAccessible(true);        mLargeLabelField.setAccessible(true);        mShiftAmountField.setAccessible(true);        mScaleUpFactorField.setAccessible(true);        mScaleDownFactorField.setAccessible(true);        final float fontScale = view.getResources().getDisplayMetrics().scaledDensity;        for (int i = 0; i &lt; menuView.getChildCount(); i++) {            BottomNavigationItemView itemView = (BottomNavigationItemView) menuView.getChildAt(i);            TextView lagerObj = (TextView) mLargeLabelField.get(itemView);            TextView smallObj = (TextView) mSmallLabelField.get(itemView);            lagerObj.setTextSize(smallObj.getTextSize() / fontScale + 0.5f);            mShiftAmountField.set(itemView, 0);            mScaleUpFactorField.set(itemView, 1f);            mScaleDownFactorField.set(itemView, 1f);            itemView.setChecked(itemView.getItemData().isChecked());        }    } catch (NoSuchFieldException | IllegalAccessException e) {        e.printStackTrace();    }}</code></pre></li><li><p>然后初始化后调用</p><pre><code>// 默认count&gt;3时选中效果会影响ViewPager的滑动切换效果，故利用反射去掉BottomNavigationViewHelper.disableShiftMode(bottomNavigationView);// 本人没有关闭图标缩放动能，该方法不用// BottomNavigationViewHelper.disableItemScale(bottomNavigationView);</code></pre></li><li><p>布局文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:orientation=&quot;vertical&quot;    tools:context=&quot;.activity.MainActivity&quot;&gt;    &lt;com.xxx.xxxxx.view.NoScrollViewPager        android:id=&quot;@+id/viewpager&quot;        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;0dp&quot;        android:layout_weight=&quot;1&quot; /&gt;    &lt;android.support.design.widget.BottomNavigationView        android:id=&quot;@+id/bottom_navigation&quot;        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_gravity=&quot;bottom&quot;        android:background=&quot;@color/colorAppBackground&quot;        app:itemIconTint=&quot;@drawable/main_view&quot;        app:itemTextColor=&quot;@drawable/main_view&quot;        app:menu=&quot;@menu/main_navigation&quot; /&gt;&lt;/LinearLayout&gt;</code></pre></li><li><p>Menu文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;    &lt;item        android:id=&quot;@+id/menu_home&quot;        android:icon=&quot;@drawable/icon_main_home&quot;        android:orderInCategory=&quot;1&quot;        android:title=&quot;资讯&quot; /&gt;    &lt;item        android:id=&quot;@+id/menu_product&quot;        android:icon=&quot;@drawable/icon_main_product&quot;        android:orderInCategory=&quot;2&quot;        android:title=&quot;项目&quot; /&gt;    &lt;item        android:id=&quot;@+id/menu_lease&quot;        android:icon=&quot;@drawable/icon_main_lease&quot;        android:orderInCategory=&quot;4&quot;        android:title=&quot;租房&quot; /&gt;    &lt;item        android:id=&quot;@+id/menu_mine&quot;        android:icon=&quot;@drawable/icon_main_mine&quot;        android:orderInCategory=&quot;5&quot;        android:title=&quot;我的&quot; /&gt;&lt;/menu&gt;</code></pre></li><li><p>Selector文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;    &lt;item android:color=&quot;@color/colorPrimary&quot; android:state_checked=&quot;true&quot; /&gt;    &lt;item android:color=&quot;@color/colorSecondary&quot; /&gt;&lt;/selector&gt;</code></pre></li><li><p>效果如图：</p></li></ul><p><img src="https://i.imgur.com/WqWZH09.gif" alt=""></p><hr><h3 id="☠-But！-在-com-android-support-design-版本高于-27-0-3-之后，这个方法失效，这也是我接下来着重介绍-方法二-的原因"><a href="#☠-But！-在-com-android-support-design-版本高于-27-0-3-之后，这个方法失效，这也是我接下来着重介绍-方法二-的原因" class="headerlink" title="☠ But！ 在 com.android.support:design 版本高于 27.0.3 之后，这个方法失效，这也是我接下来着重介绍 方法二 的原因"></a>☠ But！ 在 <strong>com.android.support:design</strong> 版本高于 <strong>27.0.3</strong> 之后，这个方法失效，这也是我接下来着重介绍 <strong>方法二</strong> 的原因</h3><hr><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><ul><li>此方法仅针对 <strong>Gradle</strong> 文件引用 <strong>com.android.support:design</strong> 版本高于 <strong>27.0.3</strong></li></ul><h3 id="首先看一下源码"><a href="#首先看一下源码" class="headerlink" title="首先看一下源码"></a>首先看一下源码</h3><ul><li><p>当 <strong>com.android.support:design &lt;= 27.0.3</strong> 时</p><ul><li><p><strong>BottomNavigationMenuView</strong> 中源码</p><pre><code>public class BottomNavigationMenuView extends ViewGroup implements MenuView {    // ...    // 就是这个属性    private boolean mShiftingMode = true;    // ...    public void buildMenuView() {        //...        mButtons = new BottomNavigationItemView[mMenu.size()];        // 为什么item大于3的时候，会有缩放        mShiftingMode = mMenu.size() &gt; 3;        for (int i = 0; i &lt; mMenu.size(); i++) {            BottomNavigationItemView child = getNewItem();            child.setShiftingMode(mShiftingMode);            //...                    }    } }    </code></pre></li><li><p><strong>BottomNavigationItemView</strong> 中源码</p><pre><code>public class BottomNavigationItemView extends FrameLayout implements MenuView.ItemView {    private final int mShiftAmount;    private final float mScaleUpFactor;    private final float mScaleDownFactor;    private boolean mShiftingMode;    public BottomNavigationItemView(Context context, AttributeSet attrs, int defStyleAttr) {        super(context, attrs, defStyleAttr);        final Resources res = getResources();        int inactiveLabelSize = res.getDimensionPixelSize(R.dimen.design_bottom_navigation_text_size);          int activeLabelSize = res.getDimensionPixelSize( R.dimen.design_bottom_navigation_active_text_size);        mDefaultMargin = res.getDimensionPixelSize(R.dimen.design_bottom_navigation_margin);        mShiftAmount = inactiveLabelSize - activeLabelSize;        mScaleUpFactor = 1f * activeLabelSize / inactiveLabelSize;        mScaleDownFactor = 1f * inactiveLabelSize / activeLabelSize;        LayoutInflater.from(context).inflate(R.layout.design_bottom_navigation_item, this, true);        setBackgroundResource(R.drawable.design_bottom_navigation_item_background);        mIcon = findViewById(R.id.icon);        mSmallLabel = findViewById(R.id.smallLabel);        mLargeLabel = findViewById(R.id.largeLabel);    }    @Override    public void setChecked(boolean checked) {        if (mShiftingMode) {            if (checked) {                LayoutParams iconParams = (LayoutParams) mIcon.getLayoutParams();                iconParams.gravity = Gravity.CENTER_HORIZONTAL | Gravity.TOP;                iconParams.topMargin = mDefaultMargin;                mIcon.setLayoutParams(iconParams);                mLargeLabel.setVisibility(VISIBLE);                mLargeLabel.setScaleX(1f);                mLargeLabel.setScaleY(1f);            } else {                LayoutParams iconParams = (LayoutParams) mIcon.getLayoutParams();                iconParams.gravity = Gravity.CENTER;                iconParams.topMargin = mDefaultMargin;                mIcon.setLayoutParams(iconParams);                // ShiftingMode模式下，不选中文字隐藏                mLargeLabel.setVisibility(INVISIBLE);                mLargeLabel.setScaleX(0.5f);                mLargeLabel.setScaleY(0.5f);            }            mSmallLabel.setVisibility(INVISIBLE);        } else {            if (checked) {                LayoutParams iconParams = (LayoutParams) mIcon.getLayoutParams();                iconParams.gravity = Gravity.CENTER_HORIZONTAL | Gravity.TOP;                // 通过设置mShiftAmount 的大小 控制图片margin，进而控制图片大小                iconParams.topMargin = mDefaultMargin + mShiftAmount;                mIcon.setLayoutParams(iconParams);                // 通过设置mLargeLabel和mSmallLabel的显示与隐藏控制文本大小                // 如果把他俩TextSize设置为一样。则就不会变化                mLargeLabel.setVisibility(VISIBLE);                mSmallLabel.setVisibility(INVISIBLE);                mLargeLabel.setScaleX(1f);                mLargeLabel.setScaleY(1f);                mSmallLabel.setScaleX(mScaleUpFactor);                mSmallLabel.setScaleY(mScaleUpFactor);            } else {                LayoutParams iconParams = (LayoutParams) mIcon.getLayoutParams();                iconParams.gravity = Gravity.CENTER_HORIZONTAL | Gravity.TOP;                iconParams.topMargin = mDefaultMargin;                mIcon.setLayoutParams(iconParams);                mLargeLabel.setVisibility(INVISIBLE);                mSmallLabel.setVisibility(VISIBLE);                mLargeLabel.setScaleX(mScaleDownFactor);                mLargeLabel.setScaleY(mScaleDownFactor);                mSmallLabel.setScaleX(1f);                mSmallLabel.setScaleY(1f);            }        }        refreshDrawableState();    } }</code></pre></li></ul></li><li><p>当 <strong>com.android.support:design &gt; 27.0.3</strong> 时</p><ul><li><p><strong>BottomNavigationMenuView</strong> 中源码</p><pre><code>public class BottomNavigationMenuView extends ViewGroup implements MenuView {    // ...    // mShiftingMode属性消失，取而代之的是这两个属性    // itemHorizontalTranslationEnabled:是否启用水平移动动画（如果允许图标会有少许水平移动）       private boolean itemHorizontalTranslationEnabled;    // labelVisibilityMode:标签显示模式（labeled:显示标签，auto:根据标签个数判断是否显示，selected:选中的显示，unlabeled:不显示）    private int labelVisibilityMode;    // ...    public void buildMenuView() {        //...        if (this.menu.size() == 0) {            this.selectedItemId = 0;            this.selectedItemPosition = 0;            this.buttons = null;        } else {            this.buttons = new BottomNavigationItemView[this.menu.size()];            boolean shifting = this.isShifting(this.labelVisibilityMode, this.menu.getVisibleItems().size());            for(i = 0; i &lt; this.menu.size(); ++i) {                this.presenter.setUpdateSuspended(true);                this.menu.getItem(i).setCheckable(true);                this.presenter.setUpdateSuspended(false);                BottomNavigationItemView child = this.getNewItem();                //...                        }    }     //...    private boolean isShifting(int labelVisibilityMode, int childCount) {        // 这个地方很奇怪，看了BottomNavigationItem中对labelVisibilityMode做了对应处理才明白        // 默认labelVisibilityMode为&quot;auto&quot;,也就是&quot;-1&quot;,如果Item&gt;3默认开启水平动画，否则关闭水平动画。        // 如果labelVisibilityMode用户主动设置了值，且不为&quot;auto&quot;，只在&quot;selected&quot;模式下开启动画        // &quot;labeled&quot;和&quot;unlabeled&quot;两种模式都不开启动画        return labelVisibilityMode == -1 ? childCount &gt; 3 : labelVisibilityMode == 0;    }    //...}</code></pre></li><li><p>要想彻底关闭水平滑动动画，前提还要同时满足 <strong>itemHorizontalTranslationEnabled = false</strong> </p><pre><code>//...protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {    int width = MeasureSpec.getSize(widthMeasureSpec);       int visibleCount = this.menu.getVisibleItems().size();       int totalCount = this.getChildCount();       int heightSpec = MeasureSpec.makeMeasureSpec(this.itemHeight, 1073741824);       int totalWidth;       int i;       int extra;       int i;    // 两个条件都不满足才能禁止水平动画    if (this.isShifting(this.labelVisibilityMode, visibleCount) &amp;&amp; this.itemHorizontalTranslationEnabled) {        View activeChild = this.getChildAt(this.selectedItemPosition);           i = this.activeItemMinWidth;           if (activeChild.getVisibility() != 8) {               activeChild.measure(MeasureSpec.makeMeasureSpec(this.activeItemMaxWidth, -2147483648), heightSpec);               i = Math.max(i, activeChild.getMeasuredWidth());           }        //...                        ｝｝    //...</code></pre></li><li><p><strong>BottomNavigationItemView</strong> 中对 <strong>labelVisibilityMode</strong> 也做了对应处理</p><pre><code>//...            // labelVisibilityMode=&quot;auto&quot;时，值为-1// labelVisibilityMode=&quot;selected&quot;时，值为0// labelVisibilityMode=&quot;labeled&quot;时，值为1// labelVisibilityMode=&quot;unlabeled&quot;时，值为2public void setChecked(boolean checked) {    this.largeLabel.setPivotX((float)(this.largeLabel.getWidth() / 2));    this.largeLabel.setPivotY((float)this.largeLabel.getBaseline());    this.smallLabel.setPivotX((float)(this.smallLabel.getWidth() / 2));    this.smallLabel.setPivotY((float)this.smallLabel.getBaseline());    switch(this.labelVisibilityMode) {        case -1:            if (this.isShifting) {                if (checked) {                    this.setViewLayoutParams(this.icon, this.defaultMargin, 49);                    this.setViewValues(this.largeLabel, 1.0F, 1.0F, 0);                } else {                    this.setViewLayoutParams(this.icon, this.defaultMargin, 17);                    this.setViewValues(this.largeLabel, 0.5F, 0.5F, 4);                }                this.smallLabel.setVisibility(4);            } else if (checked) {                this.setViewLayoutParams(this.icon, (int)((float)this.defaultMargin + this.shiftAmount), 49);                this.setViewValues(this.largeLabel, 1.0F, 1.0F, 0);                this.setViewValues(this.smallLabel, this.scaleUpFactor, this.scaleUpFactor, 4);            } else {                this.setViewLayoutParams(this.icon, this.defaultMargin, 49);                this.setViewValues(this.largeLabel, this.scaleDownFactor, this.scaleDownFactor, 4);                this.setViewValues(this.smallLabel, 1.0F, 1.0F, 0);            }            break;        case 0:            if (checked) {                this.setViewLayoutParams(this.icon, this.defaultMargin, 49);                this.setViewValues(this.largeLabel, 1.0F, 1.0F, 0);            } else {                this.setViewLayoutParams(this.icon, this.defaultMargin, 17);                this.setViewValues(this.largeLabel, 0.5F, 0.5F, 4);            }            this.smallLabel.setVisibility(4);            break;        case 1:            if (checked) {                this.setViewLayoutParams(this.icon, (int)((float)this.defaultMargin + this.shiftAmount), 49);                this.setViewValues(this.largeLabel, 1.0F, 1.0F, 0);                this.setViewValues(this.smallLabel, this.scaleUpFactor, this.scaleUpFactor, 4);            } else {                this.setViewLayoutParams(this.icon, this.defaultMargin, 49);                this.setViewValues(this.largeLabel, this.scaleDownFactor, this.scaleDownFactor, 4);                this.setViewValues(this.smallLabel, 1.0F, 1.0F, 0);            }            break;        case 2:            this.setViewLayoutParams(this.icon, this.defaultMargin, 17);            this.largeLabel.setVisibility(8);            this.smallLabel.setVisibility(8);    }        this.refreshDrawableState();        this.setSelected(checked);}//...</code></pre></li></ul></li><li><p>最终，在新版的 <strong>Android Design</strong> 中使用 <strong>BottomNavigationView</strong> 只用在布局文件中添加两个属性就可以达到上图中的效果</p><ul><li>app:itemHorizontalTranslationEnabled=”false”</li><li><p>app:labelVisibilityMode=”labeled”</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:orientation=&quot;vertical&quot;    tools:context=&quot;.activity.MainActivity&quot;&gt;    &lt;com.xxx.xxxxx.view.NoScrollViewPager        android:id=&quot;@+id/viewpager&quot;        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;0dp&quot;        android:layout_weight=&quot;1&quot; /&gt;    &lt;android.support.design.widget.BottomNavigationView        android:id=&quot;@+id/bottom_navigation&quot;        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;wrap_content&quot;        android:layout_gravity=&quot;bottom&quot;        android:background=&quot;@color/colorAppBackground&quot;        app:itemHorizontalTranslationEnabled=&quot;false&quot;        app:itemIconTint=&quot;@drawable/main_view&quot;        app:itemTextColor=&quot;@drawable/main_view&quot;        app:labelVisibilityMode=&quot;labeled&quot;        app:menu=&quot;@menu/main_navigation&quot; /&gt;&lt;/LinearLayout&gt;</code></pre></li></ul></li><li><p><strong>最后，展示一下各个模式下区别</strong></p><ul><li><p><strong>labeled</strong><br><img src="https://i.imgur.com/kAhZUbj.jpg" alt=""></p></li><li><p><strong>unlabeled</strong><br><img src="https://i.imgur.com/5SJl8mM.jpg" alt=""></p></li><li><p><strong>select</strong><br><img src="https://i.imgur.com/IHWckaX.jpg" alt=""></p></li><li><p><strong>auto</strong></p><ul><li>如果item&gt;3效果等同于<strong>select</strong></li><li>如果item&lt;=3效果等同于<strong>labeled</strong></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;BottomNavigationView最新用法&quot;&gt;&lt;a href=&quot;#BottomNavigationView最新用法&quot; class=&quot;headerlink&quot; title=&quot;BottomNavigationView最新用法&quot;&gt;&lt;/a&gt;BottomNavigationView最新用法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Android中使用BottomNavigationView早已不稀奇，之前其他博客也都介绍的有用法。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但是，现在网上所出现的使用方法已不符合当今需要&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;方法一 (com.android.support:design 版本不高于 27.0.3)&lt;/em&gt;&lt;/strong&gt; 网上一堆&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;方法二 (com.android.support:design 版本高于 27.0.3)&lt;/em&gt;&lt;/strong&gt; 网上没有任何说明&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;故，在此特别介绍一下&lt;strong&gt;&lt;em&gt;方法二&lt;/em&gt;&lt;/strong&gt; 以供参考&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;方法一：&quot;&gt;&lt;a href=&quot;#方法一：&quot; class=&quot;headerlink&quot; title=&quot;方法一：&quot;&gt;&lt;/a&gt;方法一：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;此方法仅针对 &lt;strong&gt;Gradle&lt;/strong&gt; 文件引用 &lt;strong&gt;com.android.support:design&lt;/strong&gt; 版本不高于 &lt;strong&gt;27.0.3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⓵ 对于 &lt;strong&gt;&lt;em&gt;Item&amp;gt;3&lt;/em&gt;&lt;/strong&gt; 时的平移及缩放动画的处理&lt;/li&gt;
&lt;li&gt;⓶ 对于 &lt;strong&gt;&lt;em&gt;Item&lt;/em&gt;&lt;/strong&gt; 缩放动画（选中放大图标/文字）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Android" scheme="https://cazaea.com/categories/Android/"/>
    
    
      <category term="BottomNavigationView" scheme="https://cazaea.com/tags/BottomNavigationView/"/>
    
      <category term="Android Studio V3.2" scheme="https://cazaea.com/tags/Android-Studio-V3-2/"/>
    
      <category term="Gradle4.6" scheme="https://cazaea.com/tags/Gradle4-6/"/>
    
      <category term="Android Design 28.0.2" scheme="https://cazaea.com/tags/Android-Design-28-0-2/"/>
    
  </entry>
  
  <entry>
    <title>SweetAlertDialog Android Studio3.0 Gradle4.1报错处理</title>
    <link href="https://cazaea.com/2018/09/08/SweetAlertDialog/"/>
    <id>https://cazaea.com/2018/09/08/SweetAlertDialog/</id>
    <published>2018-09-08T08:27:47.809Z</published>
    <updated>2018-11-12T03:31:15.547Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前常用这个轮子, 近两年, 原作者不再维护, AS3.0引用报错, 在此声明新版使用方式.</p><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><h3 id="通过我自己封装SweetAlertDialog添加依赖，直接引用"><a href="#通过我自己封装SweetAlertDialog添加依赖，直接引用" class="headerlink" title="通过我自己封装SweetAlertDialog添加依赖，直接引用"></a>通过我自己封装SweetAlertDialog添加依赖，直接引用</h3><p>参考项目地址:<a href="https://github.com/Cazaea/SweetAlertDialog" target="_blank" rel="noopener">https://github.com/Cazaea/SweetAlertDialog</a></p><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><h3 id="通过导入Library引用"><a href="#通过导入Library引用" class="headerlink" title="通过导入Library引用"></a>通过导入Library引用</h3><blockquote><p>1.下载作者源码<a href="https://github.com/pedant/sweet-alert-dialog" target="_blank" rel="noopener">https://github.com/pedant/sweet-alert-dialog</a>,将作者源码中library作为module引用;<br>通过file–&gt;new–&gt;import Module(将作者源码中library直接导入)</p><p>参考: <a href="http://blog.csdn.net/Wistorms/article/details/78412514" target="_blank" rel="noopener">为项目添加Module依赖</a></p></blockquote><a id="more"></a><blockquote><p>2.删除作者library–&gt;build.gradle中给定的VERSION_NAME, GROUP,以及apply from引用, 更改版本信息(所有xxVersion值)与你的主包xxVersion值统一</p></blockquote><pre><code>apply plugin: &apos;com.android.library&apos;//version = VERSION_NAME//group = GROUP      android {        compileSdkVersion 26        buildToolsVersion &apos;26.0.2&apos;        defaultConfig {               minSdkVersion 19        }        lintOptions {            abortOnError false        }    }     dependencies {        implementation &apos;com.pnikosis:materialish-progress:1.0&apos;     }//apply from: &apos;https://raw.github.com/chrisbanes/gradle-mvn-push/master/gradle-mvn-push.gradle&apos;</code></pre><blockquote><p>3.同上, 修改library–&gt;src–&gt;AndroidManifest文件中 xxVersion值与主包下值统一</p></blockquote><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    package=&quot;cn.pedant.SweetAlert&quot;&gt;    &lt;application /&gt;&lt;/manifest&gt;</code></pre><blockquote><p>4.顺便贴出主包信息, 仅供参考.</p></blockquote><pre><code>apply plugin: &apos;com.android.application&apos;android {    compileSdkVersion 26    buildToolsVersion &apos;26.0.2&apos;    defaultConfig {        applicationId &quot;cn.pedant.SweetAlert.sample&quot;        minSdkVersion 19        targetSdkVersion 26        versionCode 1        versionName &quot;1.0.0&quot;        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;        multiDexEnabled true        ndk {            abiFilters &quot;armeabi&quot;        }    }    lintOptions {        abortOnError false    }    /*最新打包输出命名方式 com.xx.xx-versionName(versionCode).apk*/    applicationVariants.all { variant -&gt;        variant.outputs.all { output -&gt;            def newApkName = applicationId + &quot;-&quot; + variant.versionName + &quot;(&quot; + variant.versionCode + &quot;)&quot; + &quot;.apk&quot;            outputFileName = new File(newApkName)        }    }}dependencies {    implementation fileTree(include: [&apos;*.jar&apos;], dir: &apos;libs&apos;)    implementation &apos;com.android.support:appcompat-v7:26.1.0&apos;    implementation &apos;com.android.support.constraint:constraint-layout:1.0.2&apos;    testImplementation &apos;junit:junit:4.12&apos;    androidTestImplementation &apos;com.android.support.test:runner:1.0.1&apos;    androidTestImplementation &apos;com.android.support.test.espresso:espresso-core:3.0.1&apos;    //compile &apos;cn.pedant.sweetalert:library:1.3&apos;    implementation project(&apos;:library&apos;)}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前常用这个轮子, 近两年, 原作者不再维护, AS3.0引用报错, 在此声明新版使用方式.&lt;/p&gt;
&lt;h2 id=&quot;方式一&quot;&gt;&lt;a href=&quot;#方式一&quot; class=&quot;headerlink&quot; title=&quot;方式一&quot;&gt;&lt;/a&gt;方式一&lt;/h2&gt;&lt;h3 id=&quot;通过我自己封装SweetAlertDialog添加依赖，直接引用&quot;&gt;&lt;a href=&quot;#通过我自己封装SweetAlertDialog添加依赖，直接引用&quot; class=&quot;headerlink&quot; title=&quot;通过我自己封装SweetAlertDialog添加依赖，直接引用&quot;&gt;&lt;/a&gt;通过我自己封装SweetAlertDialog添加依赖，直接引用&lt;/h3&gt;&lt;p&gt;参考项目地址:&lt;a href=&quot;https://github.com/Cazaea/SweetAlertDialog&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/Cazaea/SweetAlertDialog&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;方式二&quot;&gt;&lt;a href=&quot;#方式二&quot; class=&quot;headerlink&quot; title=&quot;方式二&quot;&gt;&lt;/a&gt;方式二&lt;/h2&gt;&lt;h3 id=&quot;通过导入Library引用&quot;&gt;&lt;a href=&quot;#通过导入Library引用&quot; class=&quot;headerlink&quot; title=&quot;通过导入Library引用&quot;&gt;&lt;/a&gt;通过导入Library引用&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;1.下载作者源码&lt;a href=&quot;https://github.com/pedant/sweet-alert-dialog&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/pedant/sweet-alert-dialog&lt;/a&gt;,将作者源码中library作为module引用;&lt;br&gt;通过file–&amp;gt;new–&amp;gt;import Module(将作者源码中library直接导入)&lt;/p&gt;
&lt;p&gt;参考: &lt;a href=&quot;http://blog.csdn.net/Wistorms/article/details/78412514&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;为项目添加Module依赖&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="https://cazaea.com/categories/Android/"/>
    
    
      <category term="SweetAlert" scheme="https://cazaea.com/tags/SweetAlert/"/>
    
      <category term="Dianog" scheme="https://cazaea.com/tags/Dianog/"/>
    
      <category term="AS3.0" scheme="https://cazaea.com/tags/AS3-0/"/>
    
      <category term="Gradle4.1" scheme="https://cazaea.com/tags/Gradle4-1/"/>
    
  </entry>
  
  <entry>
    <title>最新、最全Hexo博客搭建方法</title>
    <link href="https://cazaea.com/2018/09/08/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://cazaea.com/2018/09/08/Hexo搭建博客/</id>
    <published>2018-09-08T08:27:47.781Z</published>
    <updated>2018-11-12T03:31:34.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>安装必备的工具软件：</p><ul><li><p>具体可参照<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo官网</a></p><ol><li><p>安装<a href="https://git-scm.com/" target="_blank" rel="noopener">Git工具</a>，安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></p></li><li><p>注册<a href="https://github.com/" target="_blank" rel="noopener">GitHub账号</a>，注册<a href="https://coding.net/" target="_blank" rel="noopener">Coding账号</a></p></li><li><p>安装写博客工具<a href="http://markdownpad.com/" target="_blank" rel="noopener">MarkDownPad2</a>（个人选择）</p><ul><li>注册邮箱：Soar360@live.com</li><li><p>授权秘钥：<a href="http://cazaea.com/markdownkey.html" title="点击获取">授权码</a></p></li><li><p><em>下载<a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank" rel="noopener">Awesomium 1.6.6 SDK</a>解决MarkdownPad2在win10下报HTML 渲染错误(This view has crashed)</em></p></li></ul></li></ol></li></ul><a id="more"></a><h2 id="建站正式开始"><a href="#建站正式开始" class="headerlink" title="建站正式开始"></a>建站正式开始</h2><p>以上必备应用程序安装完成后(桌面右击打开Git Bash Here)</p><p><img src="https://i.imgur.com/4pqaVRh.png" alt="点击Git Bash Here"></p><p><img src="https://i.imgur.com/Wlsllc5.png" alt="打开后画面"></p><p>输入<code>npm install -g hexo-cli</code>，使用npm安装Hexo，安装成功如下：</p><p><img src="https://i.imgur.com/J5aeujt.png" alt="安装Hexo成功"></p><p>安装成功后执行下面命令<code>hexo -v</code>，信息如下：</p><p><img src="https://i.imgur.com/uWtiiks.png" alt="版本信息"></p><p>接着执行下面命令<code>hexo init Cazaea</code>，初始化自己的博客文件夹，运行后，会在桌面生成一个Cazaea文件夹。</p><ul><li>我这里使用了Cazaea文件夹，你可以随便命名一个自己喜欢的文件夹，当然，你也可以先输入<code>cd d:/</code>，再输入<code>hexo init Cazaea</code>命令，在D盘下生成文件夹Cazaea</li></ul><p><img src="https://i.imgur.com/PY3LNNA.png" alt="初始化成功"></p><p><img src="https://i.imgur.com/uy2n70Z.png" alt="桌面生成文件夹"></p><p>文件夹内容：</p><p><img src="https://i.imgur.com/KaySXLH.png" alt="文件夹内容展示"></p><p>通过执行代码<code>cd Cazaea</code>进入刚刚创建的文件夹，执行<code>hexo s</code>开启本地服务</p><p><img src="https://i.imgur.com/JJKwx23.png" alt="开启本地服务"></p><p>打开浏览器，输入 <strong><em><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></em></strong> 预览最原始页面</p><p><img src="https://i.imgur.com/pqxBavC.png" alt="初始页面"></p><p>此时，本地已没有问题，接下来就是要把它部署到远程服务器了。</p><h2 id="建立GitHub-Pages"><a href="#建立GitHub-Pages" class="headerlink" title="建立GitHub Pages"></a>建立GitHub Pages</h2><p>这时候就要用上之前准备的账号了，登录GitHub，选择新建仓库</p><p><img src="https://i.imgur.com/S6Ixb89.png" alt="新建仓库"></p><p>这个仓库比较特殊，它要按照如下格式进行命名：你的GitHub用户名.github.io。</p><p><img src="https://i.imgur.com/NeJd25T.png" alt="创建仓库"></p><p>新建好这个仓库后，点击右上角Settings</p><p><img src="https://i.imgur.com/dkvyJgD.png" alt="新建仓库参考"></p><p>然后点击settings选项，向下翻到Git Pages选项</p><p><img src="https://i.imgur.com/fx8hfS6.png" alt="选择主题"></p><p>点击<code>Choose the theme</code>选择一个主题，接下来， 你会看到</p><p><img src="https://i.imgur.com/ulhQxPk.png" alt="Git网站走通"></p><h3 id="配置SSH公钥"><a href="#配置SSH公钥" class="headerlink" title="配置SSH公钥"></a>配置SSH公钥</h3><p>配置Github的SSH密钥可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。操作如下：</p><p>1.看看是否存在SSH密钥(keys)<br>首先，我们需要看看是否看看本机是否存在SSH keys,打开Git Bash,并运行:</p><pre><code>cd ~/. ssh</code></pre><ul><li>检查你本机用户home目录下是否存在.ssh目录<br>如果，不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。</li></ul><p>2.创建一对新的SSH密钥(keys)，这将按照你提供的邮箱地址，创建一对密钥</p><pre><code>$ssh-keygen -t rsa -C &quot;your_email@example.com&quot; </code></pre><ul><li><p>接着，根据提示，你需要输入密码和确认密码,在这里我们直接enter，不用输入密码。</p><pre><code>Enter passphrase (empty for no passphrase): [Type a passphrase]Enter same passphrase again: [Type passphrase again]</code></pre></li><li><p>输入完成之后，屏幕会显示如下信息：</p><pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.The key fingerprint is:01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</code></pre></li></ul><p>3.在GitHub账户中添加你的公钥</p><ul><li><p>运行如下命令，将公钥的内容复制到系统粘贴板(clipboard)中。</p><pre><code>clip &lt; ~/.ssh/id_rsa.pub</code></pre></li><li><p>接着：<br>登陆GitHub,进入你的Account Settings.</p></li></ul><p><img src="https://i.imgur.com/486kQ9A.png" alt="添加Key"></p><p>4.测试</p><ul><li>可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：</li><li><p>成功后你会看到</p><pre><code>Hi Cazaea! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</code></pre></li></ul><p>5.设置用户信息</p><pre><code>git config --global user.name &quot;Cazaea&quot;//用户名git config --global user.email &quot;wistorm@mail.com&quot;//填写自己的邮箱</code></pre><h3 id="为GitHub-Pages配置部署信息"><a href="#为GitHub-Pages配置部署信息" class="headerlink" title="为GitHub Pages配置部署信息"></a>为GitHub Pages配置部署信息</h3><p>打开之前生成的文件夹，找到<code>_config.yml</code>文件，为GitHub Pages配置站点文件</p><p><img src="https://i.imgur.com/xt7GIpF.png" alt="为Git配置站点文件"></p><p>然后在命令窗口执行下面命令,安装相关部署插件</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>安装完成后，执行</p><pre><code>hexo ghexo d</code></pre><p>此时会让你输入GitHub的账号和密码，输入后在浏览器中输入 <strong><em><a href="https://Cazaea.github.io/" target="_blank" rel="noopener">https://Cazaea.github.io/</a></em></strong>  应该就可以访问了,如果未显示，稍等一下，再进行访问，GitHub部署需要一点时间。</p><h2 id="配置Coding-Pages"><a href="#配置Coding-Pages" class="headerlink" title="配置Coding Pages"></a>配置Coding Pages</h2><p>为了一丝一毫的响应速度，推荐同时配置Coding Pages，使网站可以国内请求Coding，海外请求GitHub。从此，你的网站不只快了一点点。</p><p>Coding Pages配置与GitHub Pages配置步骤类似，照着同样的步骤就可以搞定。</p><p>★ 其中有一个坑，勿跳：</p><ul><li><p>当你创建项目后，无法建立分支（Coding提示：代码未上传，请先上传代码）。此时，你可以先通过配置<code>_config.yml</code>文件，将代码上传</p><pre><code>deploy:- type: git  repository: https://github.com/Cazaea/Cazaea.github.io.git  branch: master# 在之前配置的GitHub Pages之后添加Coding Pages配置- type: git  repository: https://git.coding.net/Cazaea/Cazaea.git  branch: coding-pages</code></pre></li></ul><p>然后在Coding.net中打开自己创建的项目，添加分支master：</p><p>复制Commit id<br><img src="https://i.imgur.com/t9NOIAY.png" alt=""></p><p>粘贴Commit id，完成master分支创建<br><img src="https://i.imgur.com/xVlIuSP.png" alt=""></p><p>创建完成，将coding-pages分支删除，再将_config.yml文件更改为：</p><pre><code>deploy:    - type: git      repository: https://github.com/Cazaea/Cazaea.github.io.git      branch: master    # 在之前配置的GitHub Pages之后添加Coding Pages配置    - type: git      repository: https://git.coding.net/Cazaea/Cazaea.git      branch: master</code></pre><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>首先去<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo皮肤网站</a>,选择一款进入它的GitHub地址然后将clone的文件移动到themes文件夹下。然后修改<code>_config.yml</code>文件中的<code>theme</code>为你所选择的主题的名称即可。</p><p>推荐使用next主题，执行代码：</p><pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></pre><p>修改站点配置文件<code>_config.yml</code>，找到以下部分：</p><pre><code># Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: landscape</code></pre><p>修改为</p><pre><code># Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/# theme: landscapetheme: next</code></pre><p>然后执行：</p><pre><code>hexo g -d</code></pre><p>★ 传送门必看：修改主题配置信息，请参照<a href="https://zhiho.github.io/2015/09/29/hexo-next/" target="_blank" rel="noopener">Zhiho’s Blog</a></p><h2 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h2><p>关于购买域名，此处不再赘述，说的太多，容易跑题。</p><p>之前已经写好了GitHub Pages和Coding Pages服务，只是可以通过<a href="https://Cazaea.github.io" target="_blank" rel="noopener">https://Cazaea.github.io</a>和<a href="http://Cazaea.coding.me" target="_blank" rel="noopener">http://Cazaea.coding.me</a>访问，跟自己的域名一毛钱关系没有，下面，就开始让他们有关系。</p><ol><li>在文件夹Cazaea下的source文件夹创建文件CNAME，无后缀名。</li><li>打开文件（我用的PS Pad），写入文本（自己的域名，切记，<strong>不带<a href="http://www，例如：cazaea.com" target="_blank" rel="noopener">http://www，例如：cazaea.com</a></strong>）</li></ol><p><img src="https://i.imgur.com/Hsi65a8.png" alt="域名文件"></p><p>运行</p><pre><code>hexo g -d</code></pre><p>将文件提交至GitHub和Coding，此时你的域名仍然不能访问，不要着急，你只是缺少了域名的解析。</p><p>之前百度很多，域名解析试了很多，很多能实现<a href="http://cazaea.com">cazaea.com</a>访问，不能实现<a href="http://www.cazaea.com" target="_blank" rel="noopener">www.cazaea.com</a>的访问。</p><p>★最终通过摸索，完成了域名的解析，域名最终都能访问。具体如下：</p><p><img src="https://i.imgur.com/sPX5Qjb.png" alt="域名解析"></p><h2 id="加入搜索引擎"><a href="#加入搜索引擎" class="headerlink" title="加入搜索引擎"></a>加入搜索引擎</h2><p>由于加入Google，需要翻墙，具体翻墙工具个人选择，推荐Shadowsocks，Lantern</p><p>★ 切记：如果使用推荐的下载<code>[googleff0226f76d5f451b.html, baidu_verify_vHC5EAW09E.html]</code>形式，请将下载好的文件放进Cazaea\source文件夹，并且编辑此.html文件，添加标题，如下：</p><ul><li><p>Google html文件</p><pre><code>layout: falsesitemap: false---google-site-verification: oogleff0226f76d5f451b.html</code></pre></li><li><p>Baidu html文件</p><pre><code>layout: falsesitemap: false---vHC5EAW09E</code></pre></li></ul><p>★ 传送门：</p><ul><li>参考①:<a href="https://github.com/HarleyWang93/blog/issues/26" target="_blank" rel="noopener">HarleyWang’s Blog</a></li><li>参考②:<a href="http://www.yuan-ji.me/Hexo-%E4%BC%98%E5%8C%96%EF%BC%9A%E6%8F%90%E4%BA%A4sitemap%E5%8F%8A%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%88%AC%E8%99%AB%E6%8A%93%E5%8F%96-GitHub-Pages-%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">JI’s Blog</a></li></ul><h2 id="配置文件（最关键）"><a href="#配置文件（最关键）" class="headerlink" title="配置文件（最关键）"></a>配置文件（最关键）</h2><p>这一步操作，网上的参照碰到了太多的坑，时间太久，很多Hexo建站博客都不够完善，且错误较多。<br>下面，具体说明：</p><ul><li><p>首先是配置<code>_comfig.yml</code>站点文件<br>(这是我最完整的配置，仅做参考，切记每个冒号后都有空格)</p><pre><code># Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site #博客的基本信息title: Cazaea&apos;s Blog # 博客标题subtitle: 一直相信：越努力，越幸运；越沟通，越亲近。 # 博客副标题description: 小有文艺的攻城狮 # 博客描述，部分主题会用来生成简介author: YourName # 博客作者language: zh-Hans # 语言timezone:# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: http://yoursite.com # 你自己的域名root: / # 根目录位置，如果只是github pages的子目录需要更改permalink: :year/:month/:day/:title/ #:title-:year/:month/:day/permalink_defaults:# Directory #文件结构 默认即可source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: # 代码高亮enable: true # 是否启用line_number: true # 是否显示行号auto_detect: falsetab_replace:# Home page setting# path: Root path for your blogs index page. (default = &apos;&apos;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator:  path: &apos;&apos;  per_page: 3 # 首頁默认10篇文章标题 如果值为0不分页  order_by: -datearchive_generator: # 归档页面  per_page: 10 # 默认10篇文章标题  yearly: true  # 生成年视图  monthly: true # 生成月视图tag_generator: # 标签分类页面  per_page: 10 # 默认10篇文章category_generator: # 分类页面  per_page: 10 # 默认10篇文章# Category &amp; Tag # 分类与标签default_category: uncategorizedcategory_map:tag_map:# Date / Time format # 日期显示格式## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination # 分页器## Set per_page to 0 to disable paginationper_page: 6pagination_dir: page# Extensions # 拓展## Plugins: https://hexo.io/plugins/# 自动生成sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml## Themes: https://hexo.io/themes/# 主题更换theme: next# Deployment # 部署参数## Docs: https://hexo.io/docs/deployment.htmldeploy: - type: git    repository: https://github.com/yourgitname/yourgitname.github.io.git # (这里复制你自己的Git项目地址)    branch: master - type: git    repository: https://git.coding.net/yourcodingname/yourcodingname.git # (这里复制你自己的Coding项目地址)    branch: master</code></pre></li><li><p>其次，主题配置文件，同样名为<code>_config.yml</code>，位于主题文件夹下，<code>Cazaea\themes\next</code>。</p><pre><code># 主题样式修改# Schemesscheme: Mist  # 去掉默认的注释即可切换为Mist主题#scheme: Mist#scheme: Pisces#scheme: Gemini</code></pre><p>  在<code>Cazaea\themes\next\source\images</code>文件夹下放入自己的头像。</p><pre><code># 修改头像avatar: /images/head.jpg</code></pre><ul><li><p>具体请参照：</p><p>  修改主题配置信息，请参照<a href="https://zhiho.github.io/2015/09/29/hexo-next/" target="_blank" rel="noopener">Zhiho’s Blog</a></p><p>  整体配置信息，请参照<a href="https://github.com/HarleyWang93/blog/issues/26" target="_blank" rel="noopener">HarleyWang’s Blog</a></p></li></ul></li></ul><p>★ 个性化设置：</p><ul><li>Next主题个性化：<a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">Moorez</a></li><li>添加音乐：<a href="http://www.dingxuewen.com/2017/03/11/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE%E4%B8%89/" target="_blank" rel="noopener">LeviDing</a></li><li>热度调试：<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">WangHao</a></li></ul><p>★ 特殊说明：    </p><ul><li><p>GitHub Pages对自定义域名支持HTTPS：<a href="https://likfe.com/2018/05/03/github-pages-custom-domains-support-https/" target="_blank" rel="noopener">Cafeting</a></p><pre><code>- 切记：在项目主配置文件_config.yml中也要讲域名信息更改为https://yoursite.com</code></pre></li><li><p>域名解析GitHub IP地址更换：</p><pre><code>- 185.199.108.153- 185.199.109.153- 185.199.110.153- 185.199.111.153</code></pre></li></ul><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>搭建博客，来来回回费了不少的功夫。当然，我也是一个又一个的坑踩过来的。在这期间，我阅读了很多相关的博文，也学习了不少的东西，在此向相关博文的作者表示感谢，谢谢你们的文章让我进步。</p><p>时代在进步，技术在更新。当前这篇Hexo搭建博客的文章，可能随着时间的推移，又会有新的坑出现。各位放心，一定及时更新。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;安装必备的工具软件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;具体可参照&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo官网&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装&lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Git工具&lt;/a&gt;，安装&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Node.js&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注册&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub账号&lt;/a&gt;，注册&lt;a href=&quot;https://coding.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Coding账号&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装写博客工具&lt;a href=&quot;http://markdownpad.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MarkDownPad2&lt;/a&gt;（个人选择）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注册邮箱：Soar360@live.com&lt;/li&gt;
&lt;li&gt;&lt;p&gt;授权秘钥：&lt;a href=&quot;http://cazaea.com/markdownkey.html&quot; title=&quot;点击获取&quot;&gt;授权码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;下载&lt;a href=&quot;http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Awesomium 1.6.6 SDK&lt;/a&gt;解决MarkdownPad2在win10下报HTML 渲染错误(This view has crashed)&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="https://cazaea.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://cazaea.com/tags/Hexo/"/>
    
      <category term="博客" scheme="https://cazaea.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Sitemap" scheme="https://cazaea.com/tags/Sitemap/"/>
    
      <category term="Google" scheme="https://cazaea.com/tags/Google/"/>
    
  </entry>
  
</feed>
